.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "WWW::Alexa::API 3"
.TH WWW::Alexa::API 3 "2013-12-09" "perl v5.14.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
WWW::Alexa::API \- A class implementation interface for querying Alexa.com for Traffic information.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 3
\&  use WWW::Alexa::API;
\&  my $alexa = WWW::Alexa::API\->new();
\&  my $alexa_response = $alexa\->get(\*(Aqexample.com\*(Aq);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \f(CW\*(C`WWW::Alexa::API\*(C'\fR is a class implementation interface for
querying Alexa.com for Traffic information. This offers the full Alexa
\&\s-1API\s0 response in a hash object. See \*(L"\s-1OUTPUT\*(R"\s0 for the structure of the response.
.PP
To use it, you should create a \f(CW\*(C`WWW::Alexa::API\*(C'\fR object and
use its method to \fIget()\fR, to query information for a domain.
.SH "USAGE"
.IX Header "USAGE"
my \f(CW$alexa\fR = WWW::Alexa::API\->new(%options);
my \f(CW$alexa_response\fR = \f(CW$alexa\fR\->get('alexa.com');
my \f(CW$alexa_rank\fR = \f(CW$alexa_response\fR\->{\s-1SD\s0}[1]\->{\s-1POPULARITY\s0}\->{\-TEXT};
if (defined \f(CW$alexa_response\fR\->{\s-1DMOZ\s0}) {
  ## Has \s-1DMOZ
\&\s0}
.PP
This method constructs a new \f(CW\*(C`WWW::Alexa::API\*(C'\fR object and returns it.
Key/value pair arguments can be provided to set up an initial user agent.
The following options allow specific attributes for \f(CW\*(C`LWP::UserAgent\*(C'\fR
.PP
\&\s-1KEY DEFAULT
\&\-\-\-\-\-\-\-\-\-\-\-\- \-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\s0
agent \*(L"Opera 10.0\*(R"
proxy undef
timeout undef
ip_address undef
.PP
\&\f(CW\*(C`agent\*(C'\fR specifies the header 'User\-Agent' when querying Alexa. If
the \f(CW\*(C`proxy\*(C'\fR option is passed in, requests will be made through
specified proxy. \f(CW\*(C`proxy\*(C'\fR is the host which serve requests to Alexa.
\&\f(CW\*(C`ip_address\*(C'\fR allows you to set an X\-Real-IP header for \f(CW\*(C`LWP::UserAgent\*(C'\fR.
.SH "OUTPUT"
.IX Header "OUTPUT"
\&\f(CW$VAR1\fR = {
  '\-URL' => 'alexa.com/',
  '\-VER' => '0.9',
  '\-HOME' => '0',
  '\-IDN' => 'alexa.com/',
  '\s-1RLS\s0' => {
    '\s-1RL\s0' => [
      {
        '\-TITLE' => 'Open Directory Project',
        '\-HREF' => 'dmoz.org/'
      }, {
        '\-TITLE' => 'Internet Archive',
        '\-HREF' => 'archive.org/'
      }, {
        '\-TITLE' => 'Wiki \- AboutUs Wiki Page',
        '\-HREF' => 'aboutus.org/'
      }, {
        '\-TITLE' => 'Ask.com',
        '\-HREF' => 'www.ask.com/'
      }, {
        '\-TITLE' => 'StatCounter.com',
        '\s-1HREF\s0' => 'statcounter.com/'
      }, {
        '\-TITLE' => 'Statbrain.com',
        '\-HREF' => 'statbrain.com/'
      }, {
        '\-TITLE' => 'SiteSell.com',
        '\-HREF' => 'sitesell.com/'
      }, {
        '\-TITLE' => 'Site Meter \- Counter And Statistics Tracker',
        '\-HREF' => 'sitemeter.com/'
      }, {
        '\-TITLE' => \*(L"\ex{631}\ex{62a}\ex{628}: \ex{62a}\ex{631}\ex{62a}\ex{64a}\ex{628} \ex{627}\ex{644}\ex{645}\ex{648}\ex{627}\ex{642}\ex{639} \ex{627}\ex{644}\ex{639}\ex{631}\ex{628}\ex{64a}\ex{629}\*(R",
        '\-HREF' => 'ratteb.com/'
      }, {
        '\-TITLE' => 'Quantcast',
        '\-HREF' => 'quantcast.com/'
      }, {
        '\-TITLE' => 'www.amazon.com/',
        '\-HREF' => 'www.amazon.com/'
      }
    ],
   '\-more' => '65',
   '\-PREFIX' => 'http://'
  },
  '\-AID' => '=',
  '\s-1KEYWORDS\s0' => {
    '\s-1KEYWORD\s0' => [
      { 
        '\-VAL' => 'Opportunities' 
      }, {
        '\-VAL' => 'Partners Programs'
      }, {
        '\-VAL' => 'Amazon Associates Program'
      }
    ]
  },
  '\s-1DMOZ\s0' => {
    '\s-1SITE\s0' => {
      '\-DESC' => 'Alexa is the leading provider of free, global web metrics. Search Alexa to discover the most successful sites on the web by keyword, category, or country. Use our analytics for competitive analysis, benchmarking, market research, or business development. Use Alexa\e's Pro tools to optimize your company\e's presence on the web.',
      '\-TITLE' => 'Alexa Internet',
      '\-BASE' => 'alexa.com/',
      '\s-1CATS\s0' => {
        '\s-1CAT\s0' => {
          '\-ID' => 'Top/Computers/Internet/Statistics_and_Demographics/Internet_Traffic',
          '\-CID' => '374841',
          '\-TITLE' => 'Statistics and Demographics/Internet Traffic'
        }
      }
    }
  },
  '\s-1SD\s0' => [
    {
      '\s-1COUNTRY\s0' => {
        '\-CODE' => '\s-1US\s0'
      },
      '\-TITLE' => 'A',
      '\-FLAGS' => '\s-1DMOZ\s0',
      '\s-1CHILD\s0' => {
        '\-SRATING' => '0'
      },
      '\s-1SPEED\s0' => {
        '\-TEXT' => '1611',
        '\-PCT' => '52'
      },
      '\s-1LINKSIN\s0' => {
        '\-NUM' => '358113'
      },
      '\s-1ASSOCS\s0' => {
        '\s-1ASSOC\s0' => {
          '\-ID' => 'alexashopping\-9'
        }
      },
      '\s-1CREATED\s0' => {
        '\-MONTH' => '07',
        '\-DAY' => '17',
        '\-YEAR' => '1996',
        '\-DATE' => '17\-Jul\-1996'
      },
      '\s-1CERTIFIED\s0' => {
        '\-DATE' => '2013\-12\-03T00:00:03Z'
      },
      '\s-1ADDR\s0' => {
        '\-COUNTRY' => '\s-1USA\s0',
        '\-ZIP' => '94129',
        '\-STATE' => '\s-1CA\s0',
        '\-CITY' => 'San Francisco',
        '\-STREET' => 'Presidio of San Francisco,  \s-1PO\s0 Box 29141'
      },
      '\s-1LANG\s0' => {
        '\-LEX' => 'en'
      },
      '\s-1SITEDATA\s0' => {
        '\-DISPLAY' => '7'
      },
      '\s-1REVIEWS\s0' => {
        '\-NUM' => '939',
        '\-AVG' => '4.5'
      },
      '\s-1CLAIMED\s0' => {
        '\-DATE' => '2013\-12\-06T11:00:10Z'
      },
      '\s-1TICKER\s0' => {
        '\-SYMBOL' => '\s-1AMZN\s0'
      },
      '\s-1ALEXAPRO\s0' => {
        '\-TIER' => 'advanced'
      },
      '\s-1LINK\s0' => [
        {
          '\-NUM' => '1',
          '\-TEXT' => 'Alexa Products',
          '\-URL' => 'http://www.alexa.com/products'
        },
        {
          '\-NUM' => '2',
          '\-TEXT' => 'Alexa Toolbar Creator',
          '\-URL' => 'http://www.alexa.com/toolbar\-creator'
        }
      ],
      '\-HOST' => 'alexa.com',
      '\s-1EMAIL\s0' => {
        '\-ADDR' => 'Alexa Internet'
      },
      '\s-1TITLE\s0' => {
        '\-TEXT' => 'Alexa Internet'
      },
      '\s-1LOGO\s0' => {
        '\-URL' => 'http://s3.amazonaws.com/com.alexa.data/fr_logo_url/205_4c67c060c607f3c93208e7d0f3aa00d1.png'
      },
      '\s-1OWNER\s0' => {
        '\-NAME' => 'Alexa Internet'
      },
      '\s-1PHONE\s0' => {
        '\-NUMBER' => 'unlisted'
      }
    },
    {
      '\s-1COUNTRY\s0' => {
        '\-RANK' => '1700',
        '\-NAME' => 'United States',
        '\-CODE' => '\s-1US\s0'
      },
      '\s-1POPULARITY\s0' => {
        '\-TEXT' => '1502',
        '\-URL' => 'alexa.com/',
        '\-SOURCE' => 'certify'
      },
      '\s-1REACH\s0' => {
        '\-RANK' => '1458'
      },
      '\s-1RANK\s0' => {
        '\-DELTA' => '+237'
      }
    }
  ]
};
.SH "BUGS"
.IX Header "BUGS"
All bugs can be reported to https://github.com/rijvirajib/WWW\-Alexa\-API
.PP
Some users report issues installing XML::Hash::LX
.PP
\&\f(CW\*(C`sudo apt\-get install libxml\-libxml\-perl zlib1g\-dev\*(C'\fR
.SH "SUPPORT"
.IX Header "SUPPORT"
Support requests can be sent to https://github.com/rijvirajib/WWW\-Alexa\-API
.SH "AUTHOR"
.IX Header "AUTHOR"
.Vb 5
\&    Rijvi Rajib
\&    CPAN ID: RIJ
\&    Cyphrd
\&    cpan @ rij.co
\&    http:/www.rij.co
.Ve
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
This program is free software; you can redistribute
it and/or modify it under the same terms as Perl itself.
.PP
The full text of the license can be found in the
\&\s-1LICENSE\s0 file included with this module.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIperl\fR\|(1).
